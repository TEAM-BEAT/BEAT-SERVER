plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	// Configure libraries related to QueryDSL to be required only at compile-time and add QueryDSL configuration to the compile classpath.
	querydsl.extendsFrom compileClasspath

	// Enable Log4j2 except for the Spring Boot Default Logging Framework (Logback)
	configureEach {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/snapshot" }
}

// Set global variables used in the project
ext {
	set('queryDslVersion', "5.0.0")
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Junit
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// External API
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// Oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  
    // Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// aws
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
	implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4'

	// coolsms
	implementation 'net.nurigo:sdk:4.3.0'
	implementation 'net.nurigo:javaSDK:2.2'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'
}

jar {
	enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}

// Set the directory path where the Q-Class will be generated.
def queryDslSrcDir = 'src/main/generated/querydsl/'

// When executing the JavaCompile task, set the output directory for the generated source code to queryDslSrcDir
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(queryDslSrcDir))
}

// Add the Q-Class files to the directory path recognized as source code.
// This ensures that the Q-Class is treated as a regular Java class and included in the classpath during compilation and execution.
sourceSets {
	main.java.srcDirs += [queryDslSrcDir]
}

// Configure the clean task to delete the specified directory, automatically removing the generated Q-Class.
clean {
	delete file(queryDslSrcDir)
}
